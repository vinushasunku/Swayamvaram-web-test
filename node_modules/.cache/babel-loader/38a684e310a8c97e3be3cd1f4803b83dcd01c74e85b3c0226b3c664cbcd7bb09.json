{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  registrationData: createRegistration(),\n  accountId: ''\n};\nexport function createRegistration() {\n  return {\n    emailAddress: '',\n    countryCode: 0,\n    mobileNumber: 0,\n    firstName: '',\n    lastName: '',\n    gender: '',\n    creator: '',\n    password: ''\n  };\n}\nexport const registrationSlice = createSlice({\n  name: \"registration\",\n  initialState,\n  reducers: {\n    setRegistration: (state, action) => {\n      state.registrationData = action.payload;\n    },\n    setAccountId(state, action) {\n      console.log('accountidnumber', action.payload);\n      state.accountId = action.payload;\n    },\n    resetQuery: () => {\n      return initialState;\n    }\n  }\n});\nexport const {\n  setRegistration,\n  setAccountId\n} = registrationSlice.actions;\nexport const getRegistration = state => state.registrationData;\nexport default registrationSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","registrationData","createRegistration","accountId","emailAddress","countryCode","mobileNumber","firstName","lastName","gender","creator","password","registrationSlice","name","reducers","setRegistration","state","action","payload","setAccountId","console","log","resetQuery","actions","getRegistration","reducer"],"sources":["/Users/vinusha/Desktop/Vinusha/test/Swayamvaram-web/src/redux/slices/registration.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { RegistrationDto } from '../../services/RegistrationService'\n\nexport const initialState={\n    registrationData:createRegistration(),\n    accountId:'',\n}\nexport function createRegistration(): RegistrationDto{\n    return{\n      emailAddress:'',\n      countryCode:0,\n      mobileNumber:0,\n      firstName:'',\n      lastName:'',\n      gender:'',\n      creator:'',\n      password:''\n\n    };\n\n}\nexport const registrationSlice = createSlice({\n    name: \"registration\",\n    initialState,\n    reducers: {\n      setRegistration:(state, action: PayloadAction<any>)=> {\n        state.registrationData=action.payload\n        \n      },\n      setAccountId(state, action: PayloadAction<any>) {\n        console.log('accountidnumber', action.payload)\n        state.accountId = action.payload\n      },\n      resetQuery:()=>{\n        return initialState\n      }\n    }\n  })\n  \n  export const { setRegistration,setAccountId} = registrationSlice.actions\n  export  const getRegistration=(state:any)=>state.registrationData;\n\n  export default registrationSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D,OAAO,MAAMC,YAAY,GAAC;EACtBC,gBAAgB,EAACC,kBAAkB,CAAC,CAAC;EACrCC,SAAS,EAAC;AACd,CAAC;AACD,OAAO,SAASD,kBAAkBA,CAAA,EAAmB;EACjD,OAAM;IACJE,YAAY,EAAC,EAAE;IACfC,WAAW,EAAC,CAAC;IACbC,YAAY,EAAC,CAAC;IACdC,SAAS,EAAC,EAAE;IACZC,QAAQ,EAAC,EAAE;IACXC,MAAM,EAAC,EAAE;IACTC,OAAO,EAAC,EAAE;IACVC,QAAQ,EAAC;EAEX,CAAC;AAEL;AACA,OAAO,MAAMC,iBAAiB,GAAGb,WAAW,CAAC;EACzCc,IAAI,EAAE,cAAc;EACpBb,YAAY;EACZc,QAAQ,EAAE;IACRC,eAAe,EAACA,CAACC,KAAK,EAAEC,MAA0B,KAAI;MACpDD,KAAK,CAACf,gBAAgB,GAACgB,MAAM,CAACC,OAAO;IAEvC,CAAC;IACDC,YAAYA,CAACH,KAAK,EAAEC,MAA0B,EAAE;MAC9CG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,MAAM,CAACC,OAAO,CAAC;MAC9CF,KAAK,CAACb,SAAS,GAAGc,MAAM,CAACC,OAAO;IAClC,CAAC;IACDI,UAAU,EAACA,CAAA,KAAI;MACb,OAAOtB,YAAY;IACrB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEe,eAAe;EAACI;AAAY,CAAC,GAAGP,iBAAiB,CAACW,OAAO;AACxE,OAAQ,MAAMC,eAAe,GAAER,KAAS,IAAGA,KAAK,CAACf,gBAAgB;AAEjE,eAAeW,iBAAiB,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}