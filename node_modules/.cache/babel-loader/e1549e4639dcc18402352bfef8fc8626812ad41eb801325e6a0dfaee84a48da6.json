{"ast":null,"code":"import axios from 'axios';\nimport { resetData, setModalData } from '../redux/slices/appData';\nimport store from '../redux/store';\n//import {RetryMessage} from '../components/GlobalModal';\n//import {Platform} from 'react-native';\n\nconst doLog = false;\nlet _secureCall;\nlet _secureCallNoRetry;\nlet accessToken;\nlet refreshToken;\nconst ERROR_CODES = {\n  VALIDATION_ERROR_CODE: 99999\n};\nconst ERROR_KEYS = {\n  VALIDATION_MESSAGES: 'validationMessages',\n  ERROR_CODE: 'errorCode',\n  ERROR_MESSAGE: 'errorMessage',\n  DISPLAY_MESSAGE: 'displayMessage'\n};\nexport const createSecureService = () => {\n  const secureCall = {\n    baseURL: 'https://q3u939f55c.execute-api.ap-south-1.amazonaws.com',\n    timeout: 30000,\n    responseType: 'json'\n    //   headers: {\n    //     Authorization: 'Bearer ' + authResult.idToken,\n    //     'Content-Type': 'application/json',\n    //   },\n  };\n\n  _secureCallNoRetry = axios.create(secureCall);\n  _secureCall = axios.create(secureCall);\n};\nexport function destroySecureService() {\n  _secureCall = null;\n  _secureCallNoRetry = null;\n}\nexport const secureService = () => {\n  if (_secureCall === null || _secureCall === undefined) {\n    throw console.error('Secure service not created yet.');\n  } else {\n    return _secureCall;\n  }\n};\nexport const insecureService = () => {\n  const regularCall = axios.create({\n    baseURL: 'https://q3u939f55c.execute-api.ap-south-1.amazonaws.com',\n    timeout: 30000,\n    responseType: 'json'\n  });\n  return regularCall;\n};\nexport async function secureGet(url) {\n  console.log('url', url);\n  try {\n    var _secureCall2;\n    const ret = await ((_secureCall2 = _secureCall) === null || _secureCall2 === void 0 ? void 0 : _secureCall2.get(url));\n    store.dispatch(resetData());\n    return ret;\n  } catch (err) {\n    handleApiError(err, undefined);\n    return undefined;\n  }\n}\nexport async function secureGetNoRetry(url) {\n  var _secureCallNoRetry2;\n  return await ((_secureCallNoRetry2 = _secureCallNoRetry) === null || _secureCallNoRetry2 === void 0 ? void 0 : _secureCallNoRetry2.get(url));\n}\nexport async function securePut(url) {\n  try {\n    var _secureCall3;\n    const ret = await ((_secureCall3 = _secureCall) === null || _secureCall3 === void 0 ? void 0 : _secureCall3.put(url));\n    store.dispatch(resetData());\n    return ret;\n  } catch (err) {\n    handleApiError(err, undefined);\n    return undefined;\n  }\n}\nexport async function securePost(url, body, errMsg) {\n  try {\n    var _secureCall4;\n    console.log(url, body, _secureCall);\n    const ret = await ((_secureCall4 = _secureCall) === null || _secureCall4 === void 0 ? void 0 : _secureCall4.post(url, body));\n    //store.dispatch(resetData());\n\n    return ret;\n  } catch (err) {\n    handleApiError(err, errMsg);\n    return undefined;\n  }\n}\nexport async function insecureGet(url) {\n  try {\n    const ret = await insecureService().get(url);\n    store.dispatch(resetData());\n    return ret;\n  } catch (err) {\n    handleApiError(err, undefined);\n    return undefined;\n  }\n}\nfunction handleApiError(err, errMsg) {\n  var _err$response$data, _err$response$data$di;\n  const errorMessage = {\n    isVisible: true,\n    title: 'Connection Error',\n    message: errMsg ? errMsg : 'Network connection failed.',\n    btnText: 'Continue',\n    canClose: true,\n    showLoading: false\n  };\n  if (err.response && ((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$di = _err$response$data.displayMessage) === null || _err$response$data$di === void 0 ? void 0 : _err$response$data$di.length) > 0) {\n    var _err$response$data2;\n    errorMessage.message = err.response.data.displayMessage;\n    if (((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : _err$response$data2.errorCode) === ERROR_CODES.VALIDATION_ERROR_CODE) {\n      var _err$response$data3;\n      const validationMessages = (_err$response$data3 = err.response.data) === null || _err$response$data3 === void 0 ? void 0 : _err$response$data3.validationMessages.join('\\n');\n      errorMessage.message = errorMessage.message + '\\n' + validationMessages;\n    }\n  }\n  store.dispatch(setModalData(errorMessage));\n}","map":{"version":3,"names":["axios","resetData","setModalData","store","doLog","_secureCall","_secureCallNoRetry","accessToken","refreshToken","ERROR_CODES","VALIDATION_ERROR_CODE","ERROR_KEYS","VALIDATION_MESSAGES","ERROR_CODE","ERROR_MESSAGE","DISPLAY_MESSAGE","createSecureService","secureCall","baseURL","timeout","responseType","create","destroySecureService","secureService","undefined","console","error","insecureService","regularCall","secureGet","url","log","_secureCall2","ret","get","dispatch","err","handleApiError","secureGetNoRetry","_secureCallNoRetry2","securePut","_secureCall3","put","securePost","body","errMsg","_secureCall4","post","insecureGet","_err$response$data","_err$response$data$di","errorMessage","isVisible","title","message","btnText","canClose","showLoading","response","data","displayMessage","length","_err$response$data2","errorCode","_err$response$data3","validationMessages","join"],"sources":["/Users/vinusha/Desktop/Vinusha/test/Swayamvaram-web/src/services/APIServices.tsx"],"sourcesContent":["import axios, {AxiosError, AxiosInstance} from 'axios';\nimport axiosRetry from 'axios-retry';\nimport {resetData, setModalData} from '../redux/slices/appData';\nimport store from '../redux/store';\n//import {RetryMessage} from '../components/GlobalModal';\n//import {Platform} from 'react-native';\n\nconst doLog: boolean = false;\n\nlet _secureCall: AxiosInstance | null;\nlet _secureCallNoRetry: AxiosInstance | null;\nlet accessToken: string;\nlet refreshToken: string;\n\nconst ERROR_CODES = {\n    VALIDATION_ERROR_CODE: 99999,\n  };\n  \n  const ERROR_KEYS = {\n    VALIDATION_MESSAGES: 'validationMessages',\n    ERROR_CODE: 'errorCode',\n    ERROR_MESSAGE: 'errorMessage',\n    DISPLAY_MESSAGE: 'displayMessage',\n  };\n\n  export const createSecureService = () => {  \n   \n  \n    const secureCall: any = {\n      baseURL: 'https://q3u939f55c.execute-api.ap-south-1.amazonaws.com',\n      timeout: 30000,\n      responseType: 'json',\n    //   headers: {\n    //     Authorization: 'Bearer ' + authResult.idToken,\n    //     'Content-Type': 'application/json',\n    //   },\n    };\n  _secureCallNoRetry = axios.create(secureCall);\n  _secureCall = axios.create(secureCall);\n  };\n\n  export function destroySecureService() {\n\n    _secureCall = null;\n  \n    _secureCallNoRetry = null;\n  \n  }\n  \n   \n  \n  export const secureService = (): AxiosInstance => {\n  \n    if (_secureCall === null || _secureCall === undefined) {\n  \n      throw console.error('Secure service not created yet.');\n  \n    } else {\n  \n      return _secureCall;\n  \n    }\n  \n  };\n\n  export const insecureService = (): AxiosInstance => {\n\n    const regularCall = axios.create({\n  \n      baseURL:  'https://q3u939f55c.execute-api.ap-south-1.amazonaws.com',\n  \n      timeout: 30000,\n  \n      responseType: 'json',\n  \n    });\n  \n\n  \n    return regularCall;\n  \n  };\n\n  export async function secureGet(url: string) {\n    console.log('url',url)\n    try {\n      const ret = await _secureCall?.get(url);\n  \n      store.dispatch(resetData());\n  \n      return ret;\n  \n    } catch (err) {\n  \n      handleApiError(err, undefined);\n  \n      return undefined;\n  \n    }\n  \n  }\n  \n   \n  \n  export async function secureGetNoRetry(url: string) {\n  \n    return await _secureCallNoRetry?.get(url);\n  \n  }\n  \n   \n  \n  export async function securePut(url: string) {\n    try {\n  \n      const ret = await _secureCall?.put(url);\n  \n      store.dispatch(resetData());\n  \n      return ret;\n  \n    } catch (err) {\n  \n      handleApiError(err, undefined);\n  \n      return undefined;\n  \n    }\n  \n  }\n  \n   \n  \n  export async function securePost(url: string, body: any, errMsg: string) {\n  \n    try {\n      console.log(url,body,_secureCall);\n      const ret = await _secureCall?.post(url, body);\n      //store.dispatch(resetData());\n  \n      return ret;\n  \n    } catch (err) {\n  \n      handleApiError(err, errMsg);\n  \n      return undefined;\n  \n    }\n  \n  }\n  \n   \n  \n  export async function insecureGet(url: string) {\n  \n    try {\n  \n      const ret = await insecureService().get(url);\n  \n      store.dispatch(resetData());\n  \n      return ret;\n  \n    } catch (err) {\n  \n      handleApiError(err, undefined);\n  \n      return undefined;\n  \n    }\n  \n  }\n\n  function handleApiError(err: any, errMsg: any) {\n\n    const errorMessage = {\n  \n      isVisible: true,\n  \n      title: 'Connection Error',\n  \n      message: errMsg ? errMsg : 'Network connection failed.',\n  \n      btnText: 'Continue',\n  \n      canClose: true,\n  \n      showLoading: false,\n  \n    };\n  \n    if (err.response && err.response.data?.displayMessage?.length > 0) {\n  \n      errorMessage.message = err.response.data.displayMessage;\n  \n   \n  \n      if (err.response.data?.errorCode === ERROR_CODES.VALIDATION_ERROR_CODE) {\n  \n        const validationMessages =\n  \n          err.response.data?.validationMessages.join('\\n');\n  \n        errorMessage.message = errorMessage.message + '\\n' + validationMessages;\n  \n      }\n  \n    }\n  \n   \n  \n    store.dispatch(setModalData(errorMessage));\n  \n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}