{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport LocationService from '../../services/LocationService';\nexport const initialState = {\n  religionStatus: 'idle',\n  religionError: '',\n  locationData: createLocation(),\n  countryData: createCountryData(),\n  stateList: createStateList(),\n  cityList: createCityList(),\n  currentRequestId: undefined\n};\nexport function createLocation() {\n  return {\n    country: '',\n    state: '',\n    city: '',\n    citizenship: '',\n    visaStatus: '',\n    visaExpiryMonth: 0,\n    visaExpiryYear: 0\n  };\n}\nexport function createStateList() {\n  return [{\n    id: '',\n    name: '',\n    hasNextLevel: '',\n    nextLevelName: ''\n  }];\n}\nexport function createCityList() {\n  return [{\n    id: '',\n    name: '',\n    hasNextLevel: '',\n    nextLevelName: ''\n  }];\n}\nexport function createCountryData() {\n  return [{\n    id: '',\n    name: '',\n    hasNextLevel: '',\n    nextLevelName: ''\n  }];\n}\nexport const fetchCountrylists = createAsyncThunk('/matrimony/getlocation', async () => {\n  var _res$data;\n  const res = await LocationService.getCountries();\n  return res ? res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.values : undefined;\n});\nexport const fetchStatelists = createAsyncThunk('/matrimony/state/', async countryName => {\n  var _res$data2;\n  const res = await LocationService.getStates(countryName);\n  return res ? res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.values : undefined;\n});\nexport const fetchCitylists = createAsyncThunk('/matrimony/city/', async location => {\n  var _res$data3;\n  const res = await LocationService.getCities(location.country, location.state);\n  return res ? res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.values : undefined;\n});\nexport const locationSlice = createSlice({\n  name: \"Caste\",\n  initialState,\n  reducers: {\n    resetQuery: () => {\n      return initialState;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCountrylists.fulfilled, (state, action) => {\n      const {\n        requestId\n      } = action.meta;\n      if (state.religionStatus === 'pending' && state.currentRequestId === requestId) {\n        state.religionStatus = 'idle';\n        state.countryData.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    }), builder.addCase(fetchCountrylists.pending, (state, action) => {\n      if (state.religionStatus === 'idle') {\n        state.religionStatus = 'pending';\n        state.religionError = '';\n      }\n    }), builder.addCase(fetchCountrylists.rejected, (state, action) => {\n      const {\n        requestId\n      } = action.meta;\n      if (state.religionStatus === 'pending' && state.currentRequestId === requestId) {\n        state.religionStatus = 'idle';\n        state.religionError = \"Unable to retrive data\";\n        state.currentRequestId = undefined;\n      }\n    }), builder.addCase(fetchStatelists.fulfilled, (state, action) => {\n      const {\n        requestId\n      } = action.meta;\n      if (state.religionStatus === 'pending' && state.currentRequestId === requestId) {\n        state.religionStatus = 'idle';\n        state.stateList.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    }), builder.addCase(fetchStatelists.pending, (state, action) => {\n      if (state.religionStatus === 'idle') {\n        state.religionStatus = 'pending';\n        state.religionError = '';\n      }\n    }), builder.addCase(fetchStatelists.rejected, (state, action) => {\n      const {\n        requestId\n      } = action.meta;\n      if (state.religionStatus === 'pending' && state.currentRequestId === requestId) {\n        state.religionStatus = 'idle';\n        state.religionError = \"Unable to retrive data\";\n        state.currentRequestId = undefined;\n      }\n    }), builder.addCase(fetchCitylists.fulfilled, (state, action) => {\n      const {\n        requestId\n      } = action.meta;\n      if (state.religionStatus === 'pending' && state.currentRequestId === requestId) {\n        state.religionStatus = 'idle';\n        state.cityList.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    }), builder.addCase(fetchCitylists.pending, (state, action) => {\n      if (state.religionStatus === 'idle') {\n        state.religionStatus = 'pending';\n        state.religionError = '';\n      }\n    }), builder.addCase(fetchCitylists.rejected, (state, action) => {\n      const {\n        requestId\n      } = action.meta;\n      if (state.religionStatus === 'pending' && state.currentRequestId === requestId) {\n        state.religionStatus = 'idle';\n        state.religionError = \"Unable to retrive data\";\n        state.currentRequestId = undefined;\n      }\n    });\n  }\n});\nexport const {} = locationSlice.actions;\nexport const getLocation = state => state.locationData;\nexport const getCountry = state => state.countryData;\nexport const getStateList = state => state.stateList;\nexport const getCityList = state => state.cityList;\nexport default locationSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","LocationService","initialState","religionStatus","religionError","locationData","createLocation","countryData","createCountryData","stateList","createStateList","cityList","createCityList","currentRequestId","undefined","country","state","city","citizenship","visaStatus","visaExpiryMonth","visaExpiryYear","id","name","hasNextLevel","nextLevelName","fetchCountrylists","_res$data","res","getCountries","data","values","fetchStatelists","countryName","_res$data2","getStates","fetchCitylists","location","_res$data3","getCities","locationSlice","reducers","resetQuery","extraReducers","builder","addCase","fulfilled","action","requestId","meta","push","payload","pending","rejected","actions","getLocation","getCountry","getStateList","getCityList","reducer"],"sources":["/Users/vinusha/Desktop/Vinusha/test/Swayamvaram-web/src/redux/slices/location.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport CasteService, { CasteInfoDto, ReligionDataDto } from '../../services/CasteService'\nimport LocationService, { LocationDataDto, LocationInfoDto } from '../../services/LocationService';\n\nexport const initialState={\n    religionStatus:'idle',\n    religionError:'',\n    locationData:createLocation(),\n    countryData:createCountryData(),\n    stateList:createStateList(),\n    cityList:createCityList(),\n    currentRequestId: undefined,\n}\nexport function createLocation(): LocationInfoDto{\n    return{\n    country:'',\n    state:'',\n    city:'',\n    citizenship:'',\n    visaStatus:'',\n    visaExpiryMonth:0,\n    visaExpiryYear:0,\n    };\n\n}\nexport function createStateList(): [LocationDataDto]{\n  return[\n    {\n      id:'',\n      name:'',\n      hasNextLevel:'',\n      nextLevelName:''\n  }\n  ]\n\n}\nexport function createCityList(): [LocationDataDto]{\n  return[\n    {\n      id:'',\n      name:'',\n      hasNextLevel:'',\n      nextLevelName:''\n  }\n  ]\n\n}\nexport function createCountryData(): [LocationDataDto]{\n  return[\n    {\n      id:'',\n      name:'',\n      hasNextLevel:'',\n      nextLevelName:''\n    },\n  ]\n\n}\n\nexport const fetchCountrylists=createAsyncThunk(\n  '/matrimony/getlocation',\n  async () =>{\n    const res= await LocationService.getCountries();\n    return res? res?.data?.values :undefined\n  }\n);\nexport const fetchStatelists=createAsyncThunk(\n  '/matrimony/state/',\n  async (countryName:string) =>{\n    const res= await LocationService.getStates(countryName);\n    return res? res?.data?.values :undefined\n  }\n);\nexport const fetchCitylists=createAsyncThunk(\n  '/matrimony/city/',\n  async (location:LocationInfoDto) =>{\n    const res= await LocationService.getCities(location.country,location.state);\n    return res? res?.data?.values :undefined\n  }\n);\nexport const locationSlice = createSlice({\n    name: \"Caste\",\n    initialState,\n    reducers: {\n      resetQuery:()=>{\n        return initialState\n      },\n    },\n    extraReducers: builder => {\n      builder.addCase(fetchCountrylists.fulfilled, (state, action) => {\n        const { requestId } = action.meta\n        if (\n          state.religionStatus === 'pending' &&\n          state.currentRequestId === requestId\n        ) {\n          state.religionStatus = 'idle'\n          state.countryData.push(action.payload)\n          state.currentRequestId = undefined\n        }\n      }),\n      builder.addCase(fetchCountrylists.pending, (state, action) => {\n        if (state.religionStatus === 'idle') {\n            state.religionStatus = 'pending'\n            state.religionError='';\n          }\n      }),\n      builder.addCase(fetchCountrylists.rejected, (state, action) => {\n        const { requestId } = action.meta\n        if (\n          state.religionStatus === 'pending' &&\n          state.currentRequestId === requestId\n        ) {\n          state.religionStatus = 'idle'\n          state.religionError = \"Unable to retrive data\"\n          state.currentRequestId = undefined\n        }\n      }),\n      builder.addCase(fetchStatelists.fulfilled, (state, action) => {\n        const { requestId } = action.meta\n        if (\n          state.religionStatus === 'pending' &&\n          state.currentRequestId === requestId\n        ) {\n          state.religionStatus = 'idle'\n          state.stateList.push(action.payload)\n          state.currentRequestId = undefined\n        }\n      }),\n      builder.addCase(fetchStatelists.pending, (state, action) => {\n        if (state.religionStatus === 'idle') {\n            state.religionStatus = 'pending'\n            state.religionError='';\n          }\n      }),\n      builder.addCase(fetchStatelists.rejected, (state, action) => {\n        const { requestId } = action.meta\n        if (\n          state.religionStatus === 'pending' &&\n          state.currentRequestId === requestId\n        ) {\n          state.religionStatus = 'idle'\n          state.religionError = \"Unable to retrive data\"\n          state.currentRequestId = undefined\n        }\n      }),\n      builder.addCase(fetchCitylists.fulfilled, (state, action) => {\n        const { requestId } = action.meta\n        if (\n          state.religionStatus === 'pending' &&\n          state.currentRequestId === requestId\n        ) {\n          state.religionStatus = 'idle'\n          state.cityList.push(action.payload)\n          state.currentRequestId = undefined\n        }\n      }),\n      builder.addCase(fetchCitylists.pending, (state, action) => {\n        if (state.religionStatus === 'idle') {\n            state.religionStatus = 'pending'\n            state.religionError='';\n          }\n      }),\n      builder.addCase(fetchCitylists.rejected, (state, action) => {\n        const { requestId } = action.meta\n        if (\n          state.religionStatus === 'pending' &&\n          state.currentRequestId === requestId\n        ) {\n          state.religionStatus = 'idle'\n          state.religionError = \"Unable to retrive data\"\n          state.currentRequestId = undefined\n        }\n      })\n    }\n  \n  })\n  \n  export const { } = locationSlice.actions\n  export  const getLocation=(state:any)=>state.locationData;\n  export  const getCountry=(state:any)=>state.countryData;\n  export  const getStateList=(state:any)=>state.stateList;\n  export  const getCityList=(state:any)=>state.cityList;\n  export default locationSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}