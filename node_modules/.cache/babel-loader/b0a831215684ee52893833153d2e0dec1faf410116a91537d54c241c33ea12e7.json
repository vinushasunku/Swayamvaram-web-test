{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\n// import AsyncStorage from '@react-native-async-storage/async-storage'\nimport thunk from 'redux-thunk';\nimport storage from 'redux-persist/lib/storage';\nimport loginReducer from './slices/login';\nimport appDataReducer from '../redux/slices/appData';\n// import casteReducer from './slices/caste'\nimport registrationReducer from './slices/registration';\n// import locationReducer from './slices/location'\n// import personalReducer from './slices/personal'\n// import educationReducer from './slices/education'\n// import familyReducer from './slices/family'\nimport matcheReducer from './slices/matches';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nconst reducers = combineReducers({\n  loginId: loginReducer,\n  appData: appDataReducer,\n  // religion:casteReducer,\n  registration: registrationReducer,\n  // location:locationReducer,\n  // personal:personalReducer,\n  // education:educationReducer,\n  // family:familyReducer,\n  matches: matcheReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: hardSet,\n  whitelist: ['flags']\n};\nconst rootReducer = (state, action) => {\n  return reducers(state, action);\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk]\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","persistReducer","thunk","storage","loginReducer","appDataReducer","registrationReducer","matcheReducer","hardSet","reducers","loginId","appData","registration","matches","persistConfig","key","stateReconciler","whitelist","rootReducer","state","action","persistedReducer","store","reducer","middleware"],"sources":["/Users/vinusha/Desktop/Vinusha/test/Swayamvaram-web/src/redux/store.tsx"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit'\nimport {combineReducers} from 'redux'\nimport {persistReducer} from 'redux-persist'\n// import AsyncStorage from '@react-native-async-storage/async-storage'\nimport thunk from 'redux-thunk'\nimport storage from 'redux-persist/lib/storage';\nimport loginReducer from './slices/login';\nimport appDataReducer from '../redux/slices/appData'\n// import casteReducer from './slices/caste'\n import registrationReducer from './slices/registration'\n// import locationReducer from './slices/location'\n// import personalReducer from './slices/personal'\n// import educationReducer from './slices/education'\n// import familyReducer from './slices/family'\nimport matcheReducer from './slices/matches'\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet'\n\nconst reducers=combineReducers({\n    loginId: loginReducer,\n    appData:appDataReducer,\n    // religion:casteReducer,\n    registration:registrationReducer,\n    // location:locationReducer,\n    // personal:personalReducer,\n    // education:educationReducer,\n    // family:familyReducer,\n    matches:matcheReducer\n\n})\nconst persistConfig={\n    key:'root',\n    storage,\n    stateReconciler: hardSet,\n    whitelist:['flags'],\n}\nconst rootReducer=(state:any,action:any)=>{\n    return reducers(state,action)\n};\nconst persistedReducer=persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware:[thunk]\n});\n\nexport type RootState=ReturnType<typeof store.getState>;\nexport type AppDispatch=typeof store.dispatch;\nexport default store;"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,SAAQC,eAAe,QAAO,OAAO;AACrC,SAAQC,cAAc,QAAO,eAAe;AAC5C;AACA,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,yBAAyB;AACpD;AACC,OAAOC,mBAAmB,MAAM,uBAAuB;AACxD;AACA;AACA;AACA;AACA,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,2CAA2C;AAE/D,MAAMC,QAAQ,GAACT,eAAe,CAAC;EAC3BU,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAACN,cAAc;EACtB;EACAO,YAAY,EAACN,mBAAmB;EAChC;EACA;EACA;EACA;EACAO,OAAO,EAACN;AAEZ,CAAC,CAAC;AACF,MAAMO,aAAa,GAAC;EAChBC,GAAG,EAAC,MAAM;EACVZ,OAAO;EACPa,eAAe,EAAER,OAAO;EACxBS,SAAS,EAAC,CAAC,OAAO;AACtB,CAAC;AACD,MAAMC,WAAW,GAACA,CAACC,KAAS,EAACC,MAAU,KAAG;EACtC,OAAOX,QAAQ,CAACU,KAAK,EAACC,MAAM,CAAC;AACjC,CAAC;AACD,MAAMC,gBAAgB,GAACpB,cAAc,CAACa,aAAa,EAAEI,WAAW,CAAC;AAEjE,MAAMI,KAAK,GAAGvB,cAAc,CAAC;EAC3BwB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAC,CAACtB,KAAK;AACnB,CAAC,CAAC;AAIF,eAAeoB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}